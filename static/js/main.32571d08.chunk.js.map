{"version":3,"sources":["logo.svg","MineSiteOverview.js","MineSiteInput.js","App.js","reportWebVitals.js","index.js"],"names":["MineSiteOverview","props","className","mineList","map","ore","index","name","quantity","MineSiteInput","submit","event","updateMineList","state","updateQuantity","oreIndex","console","log","setState","oreQuantity","id","MineInputList","this","type","value","onClick","React","Component","OreInput","changeQuantity","newQuantity","parseInt","target","htmlFor","onChange","App","newList","i","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.32571d08.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import './MineSiteOverview.css'\n\nfunction MineSiteOverview (props) {\n    return (\n        <div className=\"mine-site-overview\">\n            <h1> Mine Site Overview</h1>\n            <ul>\n            {\n                props.mineList.map ((ore, index) => {\n                    return (\n                        <li className=\"ore-item\" key={index}>\n                            <p className=\"ore-name\">Name: {ore.name}</p>\n                            <p className=\"ore-quantity\">Quantity: {ore.quantity}</p>\n                        </li>\n                    )\n                })\n            }\n            </ul>\n        </div>\n    )\n}\n\nexport default MineSiteOverview;\n","import React from 'react';\nimport './MineSiteInput.css'\n\nclass MineSiteInput extends React.Component {\n    constructor (props) {\n        super(props);\n\n        this.state = {\n            mineList : props.mineList.map (ore => ore.quantity)                     \n        }\n\n        console.log (this.state.mineList);\n    }\n\n    submit = (event) => {\n        this.props.updateMineList (this.state.mineList);\n    }\n\n    updateQuantity = (oreIndex, quantity) => {\n        console.log(\"Update \" + oreIndex + \" new quantity \" + quantity);\n        this.setState(state => {\n            const list = state.mineList.map((oreQuantity, index) => {\n                if (index === oreIndex) {\n                    return quantity\n                } else {\n                    return oreQuantity;\n                }\n            })\n\n            return {\n                mineList: list,\n            }\n        })\n\n        console.log (this.state.mineList)\n    }\n\n   render () {\n       return (\n            <div id=\"mine-site-input\">\n                <h1>Mine Site Input</h1>\n                <form id=\"mine-site-form\">\n                    <MineInputList mineList={this.props.mineList} updateQuantity={this.updateQuantity} />\n                    <input id=\"mine-input-submit\" type=\"button\" value=\"Submit\" onClick={this.submit}/>\n\n                </form>\n            </div>\n        );\n   }\n}\n\nfunction MineInputList (props) {\n    return (\n            <div className=\"mine-input-list\">\n               {\n                props.mineList.map ((ore, index) => {\n                    return <OreInput ore={ore} key={index} index={index} updateQuantity={props.updateQuantity} />\n               })\n            }\n           </div>\n\n\n    )\n}\n\nclass OreInput extends React.Component {\n    constructor (props) {\n        super (props);\n        this.state = {\n            quantity: props.ore.quantity\n        }\n    }\n\n\n    changeQuantity = (event) => {\n        let newQuantity = parseInt(event.target.value)\n        this.setState ({\n            quantity: newQuantity\n        })\n        this.props.updateQuantity (this.props.index, newQuantity);\n    }\n\n    render () {\n        return (\n            <div className=\"ore-input\">\n                <label className=\"ore-label\" htmlFor={'ore'+this.props.ore.id}>{this.props.ore.name}</label>\n                <input className=\"ore-text-input\" type=\"text\" id={'ore'+this.props.ore.id} name={'ore'+this.props.ore.id} value={this.state.quantity} onChange={this.changeQuantity}/>\n            </div>\n        )\n     \n    }\n}\n\n\nexport default MineSiteInput\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport MineSiteOverview from './MineSiteOverview.js';\nimport MineSiteInput from './MineSiteInput.js';\n\n\n\n    const mineList = [\n        {\n            id: 1,\n            name: \"Gold\",\n            quantity: 1,\n        },\n        {\n            id: 2,\n            name: \"Diamond\",\n            quantity: 10,\n        }\n    ] \n\n\nclass App extends React.Component {\n    constructor (props) {\n        super (props);\n        this.state = {\n            mineList\n        }\n    }\n    \n    updateMineList = (newList) => {\n        console.log (\"Update mine list\");\n        console.log (mineList);\n        console.log (\"New list:\");\n        console.log (newList);\n        for (let i = 0; i < mineList.length; i ++) {\n            mineList[i].quantity = newList[i]\n        }\n        this.setState (state => {\n            let newMineList = state.mineList.map ((ore, index) => {\n                ore.quantity = newList[index]\n\n                return ore\n            })\n            return {\n                mineList : newMineList\n            }\n        })\n        console.log(mineList);\n    }\n\n\n    render () {\n        return (\n            <div className=\"App\">\n              <MineSiteInput id=\"mine-site-input\" mineList={this.state.mineList} updateMineList={this.updateMineList}/>\n                <MineSiteOverview id=\"mine-site-overview\" mineList={this.state.mineList} />\n            </div>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}